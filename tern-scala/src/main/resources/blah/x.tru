
namespace foo.bar.blah;

import * from "../example.tru";

union PlaceOrder requires Order {
  market: MarketOrder;
  limit: LimitOrder;

  interface Order {

    @PositiveOrZero
    price: Double;

    @PositiveOrZero
    quantity: Double;
  }

  /**
   * Limit order has a time in force.
   */
  type LimitOrder extends Order {

    @NotBlank
    symbol: String?;
    timeInForce: TimeInForce?;

    enum TimeInForce {
      GoodTilCancel,
      GoodForSession
    }
  }

  type MarketOrder extends Order {

    @NotBlank
    symbol: String;
  }
}

//service TradingEngine {
//    def findTrades() returns TradesResponse;
//    def placeOrder(PlaceOrder) returns PlaceOrderResponse;
//    def cancelOrder(CancelOrder) returns CancelOrderResponse;
//}